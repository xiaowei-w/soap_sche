doctype html
html
  head
    title= title
    link(rel='stylesheet', href='/stylesheets/style.css')
    link(rel='stylesheet', href='/stylesheets/demo.css')
    link(rel='stylesheet', href='/stylesheets/media/layout.css')
    link(rel='stylesheet', href='/stylesheets/media/elements.css')

    script(src='/javascripts/jquery-1.12.2.min.js')
    script(src='/javascripts/daypilot/daypilot-all.min.js')
    
    script(type='text/javascript').
      function init() {
        
        var dp = new DayPilot.Scheduler("dp");

        // view
        dp.startDate = new DayPilot.Date("2013-03-24");  // or just dp.startDate = "2013-03-25";
        dp.cellGroupBy = "Month";
        dp.days = 7;
        dp.cellDuration = 1440; // one day
        
        dp.timeHeaders = [
            { groupBy: "Day" },
            { groupBy: "Cell" }
        ];
        dp.scale = "Hour";

        // bubble, sync loading
        // see also DayPilot.Event.data.staticBubbleHTML property
        dp.bubble = new DayPilot.Bubble();

        dp.contextMenu = new DayPilot.Menu({items: [
            {text:"Show event ID", onclick: function() {alert("Event value: " + this.source.value());} },
            {text:"Show event text", onclick: function() {alert("Event text: " + this.source.text());} },
            {text:"Show event start", onclick: function() {alert("Event start: " + this.source.start().toStringSortable());} },
            {text:"Go to google.com", href: "http://www.google.com/?q={0}"},
            {text:"CallBack: Delete this event", command: "delete"} ,
                    {text:"submenu", items: [
                            {text:"Show event ID", onclick: function() {alert("Event value: " + this.source.value());} },
                            {text:"Show event text", onclick: function() {alert("Event text: " + this.source.text());} }
                        ]
                    }
          ]});

        dp.treeEnabled = true;
        dp.rowHeaderWidth = 200;
        dp.resources = [
                    { name: "Room A", id: "A", expanded: true, children:[
                            { name : "Room A.1", id : "A.1" },
                            { name : "Room A.2", id : "A.2" }
                            ] 
                    },
                    { name: "Room B", id: "B" },
                    { name: "Room C", id: "C" },
                    { name: "Room D", id: "D" },
                    { name: "Room E", id: "E" },
                    { name: "Room F", id: "F" },
                    { name: "Room G", id: "G" },
                    { name: "Room H", id: "H" },
                    { name: "Room I", id: "I" },
                    { name: "Room J", id: "J" },
                    { name: "Room K", id: "K" }
                    ];

        // generate and load events
        for (var i = 0; i < 1; i++) {
            var duration = Math.floor(Math.random() * 6) + 1; // 1 to 6
            var start = Math.floor(Math.random() * 6) - 3; // -3 to 3

            var e = new DayPilot.Event({
                start: new DayPilot.Date("2013-03-25T00:00:00").addHours(start),
                end: new DayPilot.Date("2013-03-25T12:00:00").addHours(start).addHours(duration),
                id: DayPilot.guid(),
                resource: "B",
                text: "Event"/*,
                bubbleHtml: "Testing bubble"*/
            });
            dp.events.add(e);
        }

        dp.eventHoverHandling = "Bubble";
        
        dp.onBeforeEventRender = function(args) {
            args.e.bubbleHtml = args.e.start + " " + args.e.end;
        };
        
        // event moving
        dp.onEventMoved = function (args) {
            dp.message("Moved: " + args.e.text());
        };

        // event resizing
        dp.onEventResized = function (args) {
            dp.message("Resized: " + args.e.text());
        };

        // event creating
        dp.onTimeRangeSelected = function (args) {
            var name = prompt("New event name:", "Event");
            dp.clearSelection();
            if (!name) return;
            var e = new DayPilot.Event({
                start: args.start,
                end: args.end,
                id: DayPilot.guid(),
                resource: args.resource,
                text: name
            });
            dp.events.add(e);
            dp.message("Created");
        };
        
        dp.onEventClicked = function(args) {
            alert("clicked: " + args.e.id());
        };
        
        dp.onTimeHeaderClick = function(args) {
            alert("clicked: " + args.header.start);
        };

        dp.snapToGrid = false;
        dp.useEventBoxes = "Never";

        dp.onEventMoving = function(args) {
            var offset = args.start.getMinutes() % 5;
            if (offset) {
                args.start = args.start.addMinutes(-offset);
                args.end = args.end.addMinutes(-offset);
            }

            args.left.enabled = true;
            args.left.html = args.start.toString("h:mm tt");
        };

        dp.cellWidth = 60;

        dp.onIncludeTimeCell = function(args) {};


        dp.init();
        
        dp.scrollTo("2013-03-24T16:00:00");
      }

  body(onload="init()")
    block content
